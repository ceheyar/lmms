---
name: build
'on': [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  linux:
    name: linux
    runs-on: ubuntu-latest
    container: ghcr.io/lmms/linux.gcc:20.04
    env:
      CMAKE_OPTS: >-
        -DUSE_WERROR=ON
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        -DUSE_COMPILE_CACHE=ON
      CCACHE_MAXSIZE: 0
      CCACHE_NOCOMPRESS: 1
      MAKEFLAGS: -j2
    steps:
      - name: Configure git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Cache ccache data
        uses: actions/cache@v3
        with:
          key: ccache-${{ github.job }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ github.job }}-${{ github.ref }}-
            ccache-${{ github.job }}-
          path: ~/.ccache
      - name: Configure
        run: |
          ccache --zero-stats
          source /opt/qt5*/bin/qt5*-env.sh || true
          cmake -S . \
                -B build \
                -DCMAKE_INSTALL_PREFIX=./install \
                $CMAKE_OPTS
      - name: Build
        run: cmake --build build
      - name: Run tests
        run: |
          cd build/tests
          ctest --output-on-failure -j2
      - name: Package
        run: |
          cmake --build build --target install
          cmake --build build --target appimage
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/lmms-*.AppImage
          compression-level: 9
      - name: Upload releases
        uses: softprops/action-gh-release@v2
        with:
          name: linux
          files: build/lmms-*.AppImage
          tag_name: ${{ github.run_id }}
      - name: Trim ccache and print statistics
        run: |
          ccache --cleanup
          echo "[ccache config]"
          ccache --show-config
          echo "[ccache stats]"
          ccache --show-stats
        env:
          CCACHE_MAXSIZE: 500M
